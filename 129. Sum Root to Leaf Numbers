/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    int ans = 0;
    
    public int sumNumbers(TreeNode root) {
        StringBuilder numStr = new StringBuilder();
        // numStr.append(root.val);
        dfs(root, numStr);
        return ans;
    }
    
    public void dfs(TreeNode root, StringBuilder numStr){
        
        if(root == null) return;
        
        if(root.left == null && root.right == null){
            numStr.append(root.val);
            ans += Integer.parseInt(numStr.toString());
            numStr.deleteCharAt(numStr.length()-1);
        }
        
        if(root.left != null){
            numStr.append(root.val);
            dfs(root.left, numStr);
            numStr.deleteCharAt(numStr.length()-1);
        }
        
        if(root.right != null){
            numStr.append(root.val);
            dfs(root.right, numStr);
            numStr.deleteCharAt(numStr.length()-1);
        }
    }
}
