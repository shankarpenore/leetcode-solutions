class CombinationIterator {
    
    LinkedList <String> storage = new LinkedList<String>();
    // Iterator <String>iter;
    
    public CombinationIterator(String characters, int combinationLength) {
        saveCombinations(characters, 0 ,new StringBuilder(), combinationLength);
        // iter = storage.iterator();
    }
    
    public void saveCombinations(String characters, int start, StringBuilder cur, int k){
        
        if(cur.length() == k){
            storage.add(cur.toString());
            return;
        }
        for(int i = start; i < characters.length(); i++){
            cur = cur.append(characters.charAt(i));
            saveCombinations(characters, i+1, cur, k);
            cur = cur.deleteCharAt(cur.length()-1);
            
        }
    }
    
    public String next() {
        // return iter.next();
        return storage.pollFirst();
    }
    
    public boolean hasNext() {
        // return iter.hasNext();
        return  storage.size() != 0;
    }
}

/**
 * Your CombinationIterator object will be instantiated and called as such:
 * CombinationIterator obj = new CombinationIterator(characters, combinationLength);
 * String param_1 = obj.next();
 * boolean param_2 = obj.hasNext();
 */
