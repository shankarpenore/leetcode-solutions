/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
//     ArrayList <Integer> list = new ArrayList();
    
//      public void inorder( TreeNode root)
//         {
//             if(root == null) return;
            
//             inorder(root.left);
//             list.add(root.val);
//             inorder(root.right);
//         }
    
    public boolean isValidBST(TreeNode root) {
        
//      if tree is empty return true
//         if(root == null) return true;
        
//         inorder(root);
        
//         for(int i = 1; i < list.size(); i++){
//             if(list.get(i) <= list.get(i-1))
//                 return false;
//         }
        
//         return true;
        
        return helper(root, null, null);
                        
    }
    
    public boolean helper(TreeNode root, Integer lower, Integer higher){
        
        if(root == null) return true;
        
        if(lower != null && root.val <= lower) return false;
        
        if(higher != null && root.val >= higher) return false;
        
        if(!helper(root.right, root.val, higher)) return false;
        
        if(!helper(root.left, lower, root.val)) return false;
        
        return true;
        
    }
}
        
        
        
        
        
        
        
       
