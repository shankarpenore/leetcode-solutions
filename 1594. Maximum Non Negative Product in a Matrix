class Solution {
    public int maxProductPath(int[][] grid) {
        
        int rows = grid.length, cols = grid[0].length;
        int mod = (int)1e9+7;
        
        long g[][][] = new long[rows][cols][2];
        g[0][0][0] = grid[0][0];
        g[0][0][1] = grid[0][0];
        
//      first column
        for(int i = 1 ; i < rows; i++){
            g[i][0][0] = g[i-1][0][0]*grid[i][0];
            g[i][0][1] = g[i][0][0];
        }
        
//      first row
        for(int j = 1; j < cols; j++){
            g[0][j][0] = g[0][j-1][0]*grid[0][j];
            g[0][j][1] = g[0][j][0];
        }
        
        for(int i = 1; i < rows ; i++){
            for(int j = 1; j < cols; j++){
                long a = grid[i][j] * g[i-1][j][0];
                long b = grid[i][j] * g[i-1][j][1];
                long c = grid[i][j] * g[i][j-1][0];
                long d = grid[i][j] * g[i][j-1][1];
                
                g[i][j][0] = Math.min(a, Math.min(b, Math.min(c, d)));
                g[i][j][1] = Math.max(a, Math.max(b, Math.max(c, d)));
            }
        }
        
        long ans = Math.max(g[rows-1][cols-1][0], g[rows-1][cols-1][1]);
        if(ans < 0){
            return -1;
        }
        return (int)(ans % mod);
        
    }
}
