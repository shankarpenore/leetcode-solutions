class Solution {
    public int largestRectangleArea(int[] heights) {
        
        int ans = 0;
        
        int n = heights.length;
        int i = 0;
        Stack <Integer> stack = new Stack<>();
        
        while(i < n){
            while(!stack.isEmpty() && heights[stack.peek()] > heights[i]){
                
                ans = Math.max(ans, heights[stack.pop()] * (i- (stack.isEmpty() ? 0 : stack.peek()+1)));
            }
        
            stack.push(i);
            i++;
        }
        
       
        while(!stack.isEmpty()){
            
            // int poped = stack.pop();
            ans = Math.max(ans, heights[stack.pop()] * (n - (stack.isEmpty() ? 0 : stack.peek()+1)));
            
        }
        
        return ans;
    }
}
