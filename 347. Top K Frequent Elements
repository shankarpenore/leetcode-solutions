class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        
        if(k >= nums.length) return nums;
        
        Map <Integer, Integer> count = new HashMap();
        for(int each : nums){
            count.put(each, 1 + count.getOrDefault(each, 0));
        }
        
        PriorityQueue <Integer> maxheap = new PriorityQueue(
            (n1, n2) -> count.get(n1)- count.get(n2));
        
        for(int n : count.keySet()){
            maxheap.add(n);
            if(maxheap.size() > k)
                maxheap.poll();
        }
        
        int ans[] = new int[k];
        for(int i = 0; i < k; i++){
            ans[i] = maxheap.poll();
        }
        
        return ans;
    }
}
