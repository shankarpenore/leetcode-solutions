//https://www.youtube.com/watch?v=HtLVAvIGikU
class Solution {

    public int helper(int [][]dp, String s, int i, String t, int j){
        
        int ans = 0;
        
        if(i < s.length() && j < t.length() && dp[i][j] != -1)
            return dp[i][j];
        
        if(j == t.length()){
          return 1;   
        }
        
        if(i == s.length()){
            return 0;
        }
        
        if(s.charAt(i) != t.charAt(j)){
            ans = helper(dp, s, i+1, t, j);
        }else{
            ans = helper(dp ,s,i+1,t,j)+ helper(dp, s,i+1,t,j+1);
        }
        
        dp[i][j] = ans;
        return ans;
    }
    
    public int numDistinct(String s, String t) {
        
        
        if(s.length() < t.length()) return 0;
        if(s.equals(t)) return 1;
        
        int dp[][] = new int[s.length()][t.length()];
        for(int i = 0; i < s.length(); i++){
            for(int j = 0; j < t.length(); j++){
                dp[i][j] = -1;
            }
        }
        return helper(dp , s,0,t,0);
    }
}
