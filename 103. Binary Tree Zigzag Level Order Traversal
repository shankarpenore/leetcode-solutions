 List <List<Integer>> ans = new LinkedList();
    Stack <TreeNode> s1 = new Stack();
    Stack <TreeNode> s2 = new Stack();
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
    
        if(root == null) return ans;
        s1.push(root);
        
        while(!s1.isEmpty() || !s2.isEmpty()){
            
            List <Integer> tmp = new ArrayList();
            while(!s1.isEmpty()){
                TreeNode poped = s1.pop();
                tmp.add(poped.val);
                if(poped.left != null) s2.push(poped.left);
                if(poped.right != null) s2.push(poped.right);
            }
            if(!tmp.isEmpty()) ans.add(tmp);
            
            tmp = new ArrayList();
            while(!s2.isEmpty()){
                TreeNode poped = s2.pop();
                tmp.add(poped.val);
                if(poped.right != null) s1.push(poped.right);
                if(poped.left != null) s1.push(poped.left);
            }
            if(!tmp.isEmpty()) ans.add(tmp);
        }
        
        return ans;
    }
