class Solution {
    public int longestMountain(int[] arr) {
        
        int ans =  1;
        boolean increasing = false;
        boolean decreasing = false;
        
        for(int i = 0; i < arr.length;){
         
//          put j at left boundary
            int j = i;
            while(j+1 < arr.length && arr[j] < arr[j+1]){
                j++;
                increasing = true;
            }
            
//          now j is at peak, find right boundary
            
            while(j+1 < arr.length && arr[j] > arr[j+1]){
                j++;
                decreasing = true;
            }
            
//          if we have both left and right boundary, calculate length
            if(increasing && decreasing){
                ans = Math.max(ans, j-i+1);
            }
            
            increasing = false;
            decreasing = false;
            
//          if arr[j] == arr[j+1] goto next i
            if(i == j){
                i++;
            }else{
                i = j;
            }
        }
        return  ans == 1 ? 0 : ans;
    }
}
