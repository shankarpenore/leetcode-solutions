public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res = new ArrayList();
        findAllPaths(res, new ArrayList(), root, sum);
        return res;
    }
    
    public void findAllPaths(List<List<Integer>> res, List<Integer> curPath, TreeNode root, int sum){
        
        if(root == null) return;
        
        if(root.left == null && root.right == null){
            
            curPath.add(root.val);
            sum = sum - root.val;
            
            if(sum == 0)
                res.add(new ArrayList<Integer>(curPath));
            return;
        }
        
        curPath.add(root.val);
        sum = sum - root.val;
        
        if(root.left != null){
            findAllPaths(res, curPath, root.left, sum);
             curPath.remove(curPath.size()-1);
        }

        if(root.right != null){
            findAllPaths(res, curPath, root.right, sum);
             curPath.remove(curPath.size()-1);
        }
    }
}
