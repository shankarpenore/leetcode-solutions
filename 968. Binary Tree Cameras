/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    
//    0 - uncovered
//    1 - covered
//    2 - hasCamera
    int count = 0;
    public int dfs(TreeNode root){
        if(root == null)
            return 1;
        int left = dfs(root.left);
        int right = dfs(root.right);
        
        if(left == 0 || right == 0){
            count++;
            return 2;
        }else if(left == 2 || right == 2){
            return 1;
        }else{
            return 0;
        }
    }
    
    public int minCameraCover(TreeNode root) {
        
       if(dfs(root) == 0)
            return count+1;
        return count;
    }
}
