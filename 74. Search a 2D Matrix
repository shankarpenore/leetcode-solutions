class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        
        int row = 0;
        
        // if matrix is empty
        if(matrix.length == 0){
            return false;
        }
//         if it has one row only perform binary search
        else if(matrix.length == 1){
            return binSearch(matrix,0,target);
        }else{
//           check i th row's first value against target
//             if it is equal return true, if it more than target we know that 
//             element is is previous row perform a binary seach on that row
            for(int i=1;i< matrix.length; i++){
                if(matrix[i][0] == target)
                {
                    return true;
                }
                else if(matrix[i][0] > target){
                    row = i-1;
                    return binSearch(matrix,row,target);
                }
            }
            
//             after for loop we will have to  check for last row comparing it's last 
//             element with target
            if(matrix[matrix.length-1][matrix[0].length-1] >= target )
            {
                return binSearch(matrix,matrix.length-1,target);
            }
        }
        
        return false;
    }
    
    public boolean binSearch(int [][]matrix, int row, int target){
        int start = 0;
        int end = matrix[row].length-1;
        System.out.println(start + " "+end);
        while(start <= end)
        {
            int mid = (start+end)/2;
            if(matrix[row][mid] == target)
            {
                return true;
            }else if(matrix[row][mid] > target){
                end = mid-1;
            }
            else{
                start = mid + 1;
            }
        }
        
        return false;
    }
}
