class Solution {
    
    Map<String, Boolean> map = new HashMap<>(); 
    
    public boolean helper(String s1, int i, String s2, int j, String s3, int k){
        
        boolean ans = false;
        if(k == s3.length()){
            if(i == s1.length() && j == s2.length()){
                return true;
            }
            return false;
        }
    
        
        String key = i+"-"+j+"-"+k;
        if(map.containsKey(key)) 
            return map.get(key);
        
       
        if(i == s1.length()){
            ans  = s2.substring(j).equals(s3.substring(k));
            map.put(key, ans);
            return ans;
        }
        
        if(j == s2.length()){
            ans  = s1.substring(i).equals(s3.substring(k));
            map.put(key, ans);
            return ans;
        }
        
        boolean one =false;
        boolean two = false;
        
        if(s3.charAt(k) == s1.charAt(i)){
            one = helper(s1, i+1, s2, j, s3,k+1);
        }
        
        if(s3.charAt(k) == s2.charAt(j)){
            two = helper(s1,i, s2, j+1, s3,k+1); 
        }
        
        ans = one || two ;
        map.put(key, ans);
        return ans;
    }
    
    public boolean isInterleave(String s1, String s2, String s3 ) {
        if(s1.length()+s2.length() != s3.length())
            return false;
        return helper(s1,0,s2,0,s3,0);
    }
}
